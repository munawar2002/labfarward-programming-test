openapi: "3.0.2"
info:
  description: "LabFarward Programming Test API"
  version: "1.0"
  title: "LabFarward API"
  contact:
    email: "info@labfarward.com"
servers:
  - url: "http://localhost:8080"

paths:
  "/categories":
    post:
      summary: "Add new category"
      description: "Add new category of an item"
      operationId: "saveCategory"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryRequestDto"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponseDto"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        500:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"

  "/categories/{categoryId}/items":
    post:
      summary: "Create a new item"
      description: "Create a new item under a category"
      operationId: "saveItem"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequestDto"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemResponseDto"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        500:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"

    get:
      summary: "Getting items of category"
      description: "Get list of items under a category"
      operationId: "getItems"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ItemResponseDto"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        500:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"

  "/categories/{categoryId}/items/{itemId}":
    put:
      summary: "Update the existing item"
      description: "Update the existing item under a category"
      operationId: "updateItem"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          schema:
            type: "integer"
        - name: "itemId"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequestDto"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemResponseDto"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        500:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"


components:
  schemas:
    ErrorResponseDto:
      type: "object"
      properties:
        errorCode:
          type: "string"
        errorMessage:
          type: "string"

    CategoryRequestDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        attributeDefinitions:
          type: "array"
          items:
            $ref: "#/components/schemas/AttributeDefinitionRequestDto"

    CategoryResponseDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        active:
          type: "boolean"
        deleted:
          type: "boolean"
        attributeDefinitions:
          type: "array"
          items:
            $ref: "#/components/schemas/AttributeDefinitionResponseDto"

    AttributeDefinitionRequestDto:
      type: "object"
      properties:
        name:
          type: "string"
          nullable: false
        description:
          type: "string"
        type:
          type: "string"

    AttributeDefinitionResponseDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        type:
          type: "string"
        active:
          type: "boolean"
        deleted:
          type: "boolean"

    ItemRequestDto:
      type: "object"
      properties:
        name:
          type: "string"
          nullable: false
        description:
          type: "string"
        attributeValues:
          type: "array"
          items:
            $ref: "#/components/schemas/AttributeValueDto"

    ItemResponseDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        active:
          type: "boolean"
        deleted:
          type: "boolean"
        categoryName:
          type: "string"
        attributeValues:
          type: "array"
          items:
            $ref: "#/components/schemas/AttributeValueDto"

    AttributeValueDto:
      type: "object"
      properties:
        attributeName:
          type: "string"
        value:
          type: "string"
